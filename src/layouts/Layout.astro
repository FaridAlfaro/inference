---
interface Props {
	title: string;
	scroll: string;
}

const { title, scroll = 'auto' } = Astro.props;

---

<!doctype html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="description" content="Astro description" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/logos/cuadrado.svg" />
		<meta name="generator" content={Astro.generator} />
		<title>{title}</title>
	</head>
	<body style=`overflow-y:${scroll}`>
		<div class="gradient-bg">
			<svg class="noise">
				<filter id='noiseFilter'>
				  <feTurbulence 
					type='fractalNoise' 
					baseFrequency='0.6' 
					stitchTiles='stitch'/>
				   <feColorMatrix in="colorNoise" type="matrix" values="1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 1 0" />
					  <feComposite operator="in" in2="SourceGraphic" result="monoNoise"/>
					  <feBlend in="SourceGraphic" in2="monoNoise" mode="screen" />
				</filter>
			  </svg>
		
			<svg xmlns="http://www.w3.org/2000/svg">
			  <defs>
				<filter id="goo">
				  <feGaussianBlur in="SourceGraphic" stdDeviation="10" result="blur" />
				  <feColorMatrix in="blur" mode="matrix" values="1 0 0 0 0  0 1 0 0 0  0 0 1 0 0  0 0 0 18 -8" result="goo" />
				  <feBlend in="SourceGraphic" in2="goo" />
				</filter>
			  </defs>
			</svg>
			<div class="gradients-container">
			  <div class="g1"></div>
			  <div class="g2"></div>
			  <div class="g3"></div>
			  <div class="g4"></div>
			  <div class="g5"></div>
			  <div class="interactive"></div>
			</div>
		</div>
		  <slot /> 
	  <script>
    document.addEventListener('DOMContentLoaded', () => {
		  const interBubble = document.querySelector<HTMLDivElement>('.interactive')!;
      let curX = 0;
      let curY = 0;
      let tgX = 0;
      let tgY = 0;
	
      function move() {
        curX += (tgX - curX) / 20;
        curY += (tgY - curY) / 20;
        interBubble.style.transform = `translate(${Math.round(curX)}px, ${Math.round(curY)}px)`;
        requestAnimationFrame(() => {
          move();
        });
      }
    
      window.addEventListener('mousemove', (event) => {
        tgX = event.clientX;
        tgY = event.clientY;
      });
    
      move();
    });
  </script>
		
	</body>
</html>
<style>

	:root {
  --color-bg1: rgb(8,157,131);
  --color-bg2: rgb(0, 166, 113);
  --color1: 178, 0, 187;
  --color2: 0, 22, 29;
  --color3: 0, 166, 113;
  --color4: 0, 22, 29;
  --color5: 205, 125, 13;
  --color-interactive: 239, 239, 239;
  --circle-size: 200%;
  --blending: hard-light;
}
a{
  color: rgb(178, 0, 187); 
  color: rgb(0, 22, 29);
  color: rgb(0, 166, 113);
  color: rgb(0, 22, 29);
  color: rgb(8,157,131);
}
@keyframes moveInCircle {
  0% {
    transform: rotate(0deg);
  }
  50% {
    transform: rotate(180deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

@keyframes moveVertical {
  0% {
    transform: translateY(-50%);
  }
  50% {
    transform: translateY(50%);
  }
  100% {
    transform: translateY(-50%);
  }
}

@keyframes moveHorizontal {
  0% {
    transform: translateX(-50%) translateY(-10%);
  }
  50% {
    transform: translateX(50%) translateY(10%);
  }
  100% {
    transform: translateX(-50%) translateY(-10%);
  }
}


.gradient-bg {
  width: 100vw;
  height: 100%;
  position: fixed;
  z-index: -2;
  overflow: hidden;
  background: linear-gradient(40deg, var(--color-bg1), var(--color-bg2));
  filter: url(#noiseFilter);
  top: 0;
  left: 0;

  & svg {
    display: none;
  }


  .gradients-container {
    filter: url(#goo) blur(100px);
    width: 100vw;
    height: 100%;
  }

  .g1 {
    position: absolute;
    background: radial-gradient(circle at center, rgba(var(--color1), 0.8) 0, rgba(var(--color1), 0) 50%) no-repeat;
    mix-blend-mode: var(--blending);
    width: var(--circle-size);
    height: var(--circle-size);
    top: calc(50% - var(--circle-size) / 2);
    left: calc(50% - var(--circle-size) / 2);
    transform-origin: center center;
    animation: moveVertical 20s ease infinite;
  }

  .g2 {
    position: absolute;
    background: radial-gradient(circle at center, rgba(var(--color2), 0.8) 0, rgba(var(--color2), 0) 50%) no-repeat;
    mix-blend-mode: var(--blending);
    width: var(--circle-size);
    height: var(--circle-size);
    top: calc(50% - var(--circle-size) / 2);
    left: calc(50% - var(--circle-size) / 2);
    transform-origin: calc(50% - 400px);
    animation: moveInCircle 10s reverse infinite;
  }

  .g3 {
    position: absolute;
    background: radial-gradient(circle at center, rgba(var(--color3), 0.8) 0, rgba(var(--color3), 0) 50%) no-repeat;
    mix-blend-mode: var(--blending);
    width: var(--circle-size);
    height: var(--circle-size);
    top: calc(50% - var(--circle-size) / 2 + 200px);
    left: calc(50% - var(--circle-size) / 2 - 500px);
    transform-origin: calc(50% + 400px);
    animation: moveInCircle 20s linear infinite;
  }

  .g4 {
    position: absolute;
    background: radial-gradient(circle at center, rgba(var(--color4), 0.8) 0, rgba(var(--color4), 0) 50%) no-repeat;
    mix-blend-mode: var(--blending);
    width: var(--circle-size);
    height: var(--circle-size);
    top: calc(50% - var(--circle-size) / 2);
    left: calc(50% - var(--circle-size) / 2);
    transform-origin: calc(50% - 200px);
    animation: moveHorizontal 6s ease infinite;
  }

  .g5 {
    position: absolute;
    background: radial-gradient(circle at center, rgba(var(--color5), 0.8) 0, rgba(var(--color5), 0) 50%) no-repeat;
    mix-blend-mode: var(--blending);
    width: calc(var(--circle-size) * 2);
    height: calc(var(--circle-size) * 2);
    top: calc(50% - var(--circle-size));
    left: calc(50% - var(--circle-size));
    transform-origin: calc(50% - 800px) calc(50% + 200px);
    animation: moveInCircle 10s ease infinite;
  }

  .interactive {
    position: absolute;
    background: radial-gradient(circle at center, rgba(var(--color-interactive), 0.8) 0, rgba(var(--color-interactive), 0) 50%) no-repeat;
    mix-blend-mode: var(--blending);
    width: 100%;
    height: 100%;
    top: -50%;
    left: -50%;
    opacity: .5;
  }
}
@media (max-width: 700px) {
  .gradient-bg{
    background: linear-gradient(40deg, #696666, #000000);
    filter: url(#noiseFilter) brightness(.3);
  .g1 {
    display: none;

    animation: none;
  }

  .g2 {
    display: none;
    
    animation: none;

  }

  .g3 {
    display: none;
    
    animation: none;

  }

  .g4 {
    
    animation: none;
    display: none;

  }

  .g5 {
    display: none;

    animation: none;

  }
}

  .interactive{
    display: none;
  }
}
body{
  position: relative;
}

</style>
<style is:global>
@font-face {
    font-family: 'Melodrama';
    src: url('Melodrama-Bold.eot');
    src: local('Melodrama Bold'), local('Melodrama-Bold'),
        url('/fonts/Melodrama-Bold.eot') format('embedded-opentype'),
        url('/fonts/Melodrama-Bold.woff2') format('woff2'),
        url('/fonts/Melodrama-Bold.woff') format('woff'),
        url('/fonts/Melodrama-Bold.ttf') format('truetype');
    font-weight: bold;
    font-style: normal;
    font-display: swap;
}

@font-face {
    font-family: 'Melodrama';
    src: url('Melodrama-Medium.eot');
    src: local('Melodrama Medium'), local('Melodrama-Medium'),
        url('/fonts/Melodrama-Medium.eot') format('embedded-opentype'),
        url('/fonts/Melodrama-Medium.woff2') format('woff2'),
        url('/fonts/Melodrama-Medium.woff') format('woff'),
        url('/fonts/Melodrama-Medium.ttf') format('truetype');
    font-weight: 500;
    font-style: normal;
    font-display: swap;
}

@font-face {
    font-family: 'Melodrama';
    src: url('Melodrama-Semibold.eot');
    src: local('Melodrama Semibold'), local('Melodrama-Semibold'),
        url('/fonts/Melodrama-Semibold.eot') format('embedded-opentype'),
        url('/fonts/Melodrama-Semibold.woff2') format('woff2'),
        url('/fonts/Melodrama-Semibold.woff') format('woff'),
        url('/fonts/Melodrama-Semibold.ttf') format('truetype');
    font-weight: 600;
    font-style: normal;
    font-display: swap;
}

@font-face {
    font-family: 'Melodrama';
    src: url('Melodrama-Regular.eot');
    src: local('Melodrama Regular'), local('Melodrama-Regular'),
        url('/fonts/Melodrama-Regular.eot') format('embedded-opentype'),
        url('/fonts/Melodrama-Regular.woff2') format('woff2'),
        url('/fonts/Melodrama-Regular.woff') format('woff'),
        url('/fonts/Melodrama-Regular.ttf') format('truetype');
    font-weight: normal;
    font-style: normal;
    font-display: swap;
}

@font-face {
    font-family: 'Melodrama';
    src: url('Melodrama-Light.eot');
    src: local('Melodrama Light'), local('Melodrama-Light'),
        url('/fonts/CabinetGrotesk-Light.eot') format('embedded-opentype'),
        url('/fonts/Melodrama-Light.woff2') format('woff2'),
        url('/fonts/Melodrama-Light.woff') format('woff'),
        url('/fonts/Melodrama-Light.ttf') format('truetype');
    font-weight: 300;
    font-style: normal;
    font-display: swap;
}
@font-face {
  font-family: 'CabinetGrotesk-Variable';
  src: url('/fonts/CabinetGrotesk-Variable.woff2') format('woff2'),
       url('/fonts/CabinetGrotesk-Variable.woff') format('woff'),
       url('/fonts/CabinetGrotesk-Variable.ttf') format('truetype');
       font-weight: 100 900;
       font-display: swap;
       font-style: normal;
}


@font-face {
  font-family: 'CabinetGrotesk-Thin';
  src: url('/fonts/CabinetGrotesk-Thin.woff2') format('woff2'),
       url('/fonts/CabinetGrotesk-Thin.woff') format('woff'),
       url('/fonts/CabinetGrotesk-Thin.ttf') format('truetype');
       font-weight: 100;
       font-display: swap;
       font-style: normal;
}


@font-face {
  font-family: 'CabinetGrotesk-Extralight';
  src: url('/fonts/CabinetGrotesk-Extralight.woff2') format('woff2'),
       url('/fonts/CabinetGrotesk-Extralight.woff') format('woff'),
       url('/fonts/CabinetGrotesk-Extralight.ttf') format('truetype');
       font-weight: 200;
       font-display: swap;
       font-style: normal;
}


@font-face {
  font-family: 'CabinetGrotesk-Light';
  src: url('/fonts/CabinetGrotesk-Light.woff2') format('woff2'),
       url('/fonts/CabinetGrotesk-Light.woff') format('woff'),
       url('/fonts/CabinetGrotesk-Light.ttf') format('truetype');
       font-weight: 300;
       font-display: swap;
       font-style: normal;
}


@font-face {
  font-family: 'CabinetGrotesk-Regular';
  src: url('/fonts/CabinetGrotesk-Regular.woff2') format('woff2'),
       url('/fonts/CabinetGrotesk-Regular.woff') format('woff'),
       url('/fonts/CabinetGrotesk-Regular.ttf') format('truetype');
       font-weight: 400;
       font-display: swap;
       font-style: normal;
}


@font-face {
  font-family: 'CabinetGrotesk-Medium';
  src: url('/fonts/CabinetGrotesk-Medium.woff2') format('woff2'),
       url('/fonts/CabinetGrotesk-Medium.woff') format('woff'),
       url('/fonts/CabinetGrotesk-Medium.ttf') format('truetype');
       font-weight: 500;
       font-display: swap;
       font-style: normal;
}


@font-face {
  font-family: 'CabinetGrotesk-Bold';
  src: url('/fonts/CabinetGrotesk-Bold.woff2') format('woff2'),
       url('/fonts/CabinetGrotesk-Bold.woff') format('woff'),
       url('/fonts/CabinetGrotesk-Bold.ttf') format('truetype');
       font-weight: 700;
       font-display: swap;
       font-style: normal;
}


@font-face {
  font-family: 'CabinetGrotesk-Extrabold';
  src: url('/fonts/CabinetGrotesk-Extrabold.woff2') format('woff2'),
       url('/fonts/CabinetGrotesk-Extrabold.woff') format('woff'),
       url('/fonts/CabinetGrotesk-Extrabold.ttf') format('truetype');
       font-weight: 800;
       font-display: swap;
       font-style: normal;
}


@font-face {
  font-family: 'CabinetGrotesk-Black';
  src: url('/fonts/CabinetGrotesk-Black.woff2') format('woff2'),
       url('/fonts/CabinetGrotesk-Black.woff') format('woff'),
       url('/fonts/CabinetGrotesk-Black.ttf') format('truetype');
       font-weight: 900;
       font-display: swap;
       font-style: normal;
}
	:root {
		--black: #000;
		--white: #efefef;
		--color1: #33D7D1;
		--contrast1: #20A39E;
		--color2: #F6A2A2;
		--contrast2: #EF5B5B;
		--color3: #f4c36f;
		--contrast3: #FF9F1C;
		--accent: 136, 58, 234;
		--accent-light: 224, 204, 250;
		--accent-dark: 49, 10, 101;
		--accent-gradient: linear-gradient(
			45deg,
			rgb(var(--accent)),
			rgb(var(--accent-light)) 30%,
			white 60%
		);
	}

	html {
		box-sizing: border-box;
    width: 100vw;
    margin: 0;
    padding: 0;
	}
	body{
    width: 100vw;
		box-sizing: border-box;
    overflow-x: hidden !important; 
    margin: 0;
    padding: 0;
    background: #000000;
	}
  p{
    font-family: 'CabinetGrotesk-Variable', sans-serif;
  }
  h1, h2, h3, h4, span{
    font-family: "Melodrama", serif;
  }
  @keyframes fade-up {
        from {
            opacity: 0;
            filter: blur(40px);
        }
        to {
            opacity: 1;
        }
    }
    @keyframes slide-up {
        from {
            transform: translateY(40vh);
            opacity: 0;
        }
    }
    @keyframes fade-up-traslate {
		0% {
			opacity: 0;
			transform: translateY(1000px);
            filter: blur(40px);
		}
		100% {
			opacity: 1;
		}
	}
  @keyframes fade-down-traslate {
            to{
                /* filter: blur(40px); */
                opacity: 0;
                transform: translateY(-20vh);
            }
        }
</style>
